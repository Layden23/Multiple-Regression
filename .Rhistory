for (i in c(1:7)) {
x[i] <- x[i] + x[i-1]
}
x
x <- c(0,1,1)
for (i in c(1:7)) {
x[i] <- x[i] + x[i-1]
}
x
x <- c(0,1,1)
for (i in c(1:7)) {
x[i+1] <- x[i] + x[i-1]
}
x
x <- c(0,1,1)
for (i in c(1:7)) {
x[i+1] <- x[i] + x[i-1]
}
x
x <- c(0,1,1)
for (i in c(1:7)) {
x[i+1] <- x[i] + x[i-1]
}
x
x <- c(0,1)
for (i in c(1:7)) {
x[i+2] <- x[i+1] + x[i]
}
x
fibonacci <- function(n) {
x <- (0,1)
for (i in c(3:n)) {
x[i] <- x[i-1] + x[i-2]
}
return(x)
}
fibonacci <- function(n) {
x <- (0,1)
for (i in c(3:n)) {
x[i] <- x[i-1] + x[i-2]
}
return(x)
}
fibonacci <- function(n) {
x <- (0,1)
for (i in c(3:n)) {
x[i] <- x[i-1] + x[i-2]
}
return(x)
}
fibonacci <- function(n) {
x <- (0,1)
for (i in c(3:n)) {
x[i] <- x[i-1] + x[i-2]
}
return(x)
}
fibonacci <- function(n) {
x <- (0,1)
for (i in c(3:n)) {
x[i] <- x[i-1] + x[i-2]
}
return(x)
}
fibonacci <- function(n) {
x <- (0,1)
for (i in c(3:n)) {
x[i] <- x[i-1] + x[i-2]
}
return(x)
}
fibonacci <- function(n) {
x <- (0,1)
for (i in c(3:n)) {
x[i] <- x[i-1] + x[i-2]
}
return(x)
}
fibonacci <- function(n) {
x <- (0,1)
for (i in c(3:n)) {
x[i] <- x[i-1] + x[i-2]
}
return(x)
}
fibonacci <- function(n) {
x <- (0,1)
for (i in c(3:n)) {
x[i] <- x[i-1] + x[i-2]
}
return(x)
}
fibonacci <- function(n) {
x <- (0,1)
for (i in c(3:n)) {
x[i] <- x[i-1] + x[i-2]
}
return(x)
}
fibonacci <- function(n) {
x <- (0,1)
for (i in c(3:n)) {
x[i] <- x[i-1] + x[i-2]
i <- i+1
}
return(x)
}
fibonacci <- function(n) {
x <- (0,1)
for (i in c(3:n)) {
x[i] <- x[i-1] + x[i-2]
i <- i+1
}
return(x)
}
fibonacci <- function(n) {
x <- (0,1)
for (i in c(3:n)) {
x[i] <- x[i-1] + x[i-2]
i <- i+1
}
return(x)
}
fibonacci <- function(n) {
x <- (0,1)
for (i in c(3:n)) {
x[i] <- x[i-1] + x[i-2]
i <- i+1
}
return(x)
}
fibonacci <- function(n) {
x <- (0,1)
for (i in c(3:n)) {
x[i] <- x[i-1] + x[i-2]
i <- i+1
}
return(x)
}
fibonacci <- function(n) {
x <- (0,1)
for (i in c(3:n)) {
x[i] <- x[i-1] + x[i-2]
i <- i+1
}
return(x)
}
fibonacci <- function(n) {
x <- (0,1)
for (i in c(3:n)) {
x[i] <- x[i-1] + x[i-2]
i <- i+1
}
return(x)
}
fibonacci <- function(n) {
x <- (0,1)
for (i in c(3:n)) {
x[i] <- x[i-1] + x[i-2]
i <- i+1
}
return(x)
}
fibonacci <- function(n) {
x <- (0,1)
for (i in c(3:n)) {
x[i] <- x[i-1] + x[i-2]
i <- i+1
}
return(x)
}
fibonacci <- function(n) {
x <- (0,1)
for (i in c(3:n)) {
x[i] <- x[i-1] + x[i-2]
i <- i+1
}
return(x)
}
source('~/.active-rstudio-document', echo=TRUE)
fibonacci <- function(n) {
x <- (0,1)
i <- 3
for (i in c(3:n)) {
x[i] <- x[i-1] + x[i-2]
i <- i+1
}
return(x)
}
fibonacci <- function(n) {
x <- c(0,1)
for (i in c(3:n)) {
x[i] <- x[i-1] + x[i-2]
i <- i+1
}
return(x)
}
source('~/.active-rstudio-document', echo=TRUE)
fibonacci(2)
fibonacci(1)
fibonacci(3)
fibonacci(2)
fibonacci(2)
fibonacci(2)
fibonacci(2)
fibonacci <- function(n) {
x <- c(0,1)
for (i in c(1:n)) {
x[i] <- x[i-1] + x[i-2]
i <- i+1
}
return(x)
}
fibonacci(1)
fibonacci(2)
fibonacci(3)
fibonacci(4)
fibonacci <- function(n) {
x <- c(0,1)
for (i in c(2:n)) {
x[i] <- x[i-1] + x[i-2]
i <- i+1
}
return(x)
}
fibonacci(2)
fibonacci(2)
fibonacci(3)
fibonacci(3)
fibonacci <- function(n) {
x <- c(0,1)
for (i in c(3:n)) {
x[i] <- x[i-1] + x[i-2]
i <- i+1
}
return(x)
}
fibonacci(3)
fibonacci <- function(n) {
x <- c(0,1)
if (i == 0) {
x <-x[0]
}
if (i == 1)
x <- x
else
for (i in c(3:n)) {
x[i] <- x[i-1] + x[i-2]
i <- i+1
}
return(x)
}
fibonacci(3)
fibonacci(2)
fibonacci(1)
fibonacci <- function(n) {
x <- c(0,1)
if (i == 0) {
print("Error")
}
if (i == 1)
x <- 0
if (i == 2)
x <- x
else
for (i in c(3:n)) {
x[i] <- x[i-1] + x[i-2]
i <- i+1
}
return(x)
}
fibonacci(1)
fibonacci <- function(n) {
x <- c(0,1)
if (i == 0) {
print("Error")
}
if (i == 1)
x <- 0
if (i == 2)
x <- x
else
for (i in c(3:n)) {
x[i] <- x[i-1] + x[i-2]
i <- i+1
}
return(x)
}
fibonacci(1)
fibonacci(2)
fibonacci(3)
fibonacci(4)
fibonacci(5)
fibonacci <- function(n) {
x <- c(0,1)
if ( == 0) {
print("Error")
}
if (n == 1)
x <- 0
if (n == 2)
x <- x
else
for (i in c(3:n)) {
x[i] <- x[i-1] + x[i-2]
i <- i+1
}
return(x)
}
fibonacci <- function(n) {
x <- c(0,1)
if (n == 0) {
print("Error")
}
if (n == 1)
x <- 0
if (n == 2)
x <- x
else
for (i in c(3:n)) {
x[i] <- x[i-1] + x[i-2]
i <- i+1
}
return(x)
}
fibonacci(0)
fibonacci(1)
fibonacci(2)
fibonacci <- function(n) {
x <- c(0,1)
if (n == 0) {
print("Error")
}
if (n == 1)
x <- x[1]
if (n == 2)
x <- x
else
for (i in c(3:n)) {
x[i] <- x[i-1] + x[i-2]
i <- i+1
}
return(x)
}
fibonacci(2)
fibonacci(1)
fibonacci <- function(n) {
x <- c(0,1)
if (n == 0) {
print("Error")
}
if (n == 1)
x <- c(0)
if (n == 2)
x <- x
else
for (i in c(3:n)) {
x[i] <- x[i-1] + x[i-2]
i <- i+1
}
return(x)
}
fibonacci(1)
fibonacci(2)
fibonacci <- function(n) {
x <- c(0,1)
if (n == 0) {
print("Error")
}
if (n == 1)
x <- vector(0)
if (n == 2)
x <- x
else
for (i in c(3:n)) {
x[i] <- x[i-1] + x[i-2]
i <- i+1
}
return(x)
}
fibonacci(1)
fibonacci <- function(n) {
x <- c(0,1)
if (n == 0) {
print("Error")
}
if (n == 1)
x <- 0
x <- as.vector(x)
if (n == 2)
x <- x
else
for (i in c(3:n)) {
x[i] <- x[i-1] + x[i-2]
i <- i+1
}
return(x)
}
fibonacci(1)
fibonacci(2)
fibonacci <- function(n) {
x <- c(0,1)
if (n == 0) {
print("Error")
}
if (n == 1)
return(x[1])
if (n == 2)
x <- x
else
for (i in c(3:n)) {
x[i] <- x[i-1] + x[i-2]
i <- i+1
}
return(x)
}
fibonacci <- function(n) {
x <- c(0,1)
if (n == 0) {
return(print("Error"))
}
if (n == 1)
return(x[1])
if (n == 2)
x <- x
else
for (i in c(3:n)) {
x[i] <- x[i-1] + x[i-2]
i <- i+1
}
return(x)
}
fibonacci(2)
fibonacci(1)
fibonacci(3)
fibonacci(7)
wfibonacci <- function(n) {
x <- c(0,1)
if (n == 0) {
return(print("Error"))
}
if (n == 1)
return(x[1])
if (n == 2)
x <- x
else
while (i<=n) {
x[i] <- x[i-1] + x[i-2]
i <- i+1
}
return(x)
}
wfibonacci(3)
wfibonacci(2)
wfibonacci <- function(n) {
x <- c(0,1)
if (n == 0) {
return(print("Error"))
}
if (n == 1)
return(x[1])
else
while (i<=n) {
x[i] <- x[i-1] + x[i-2]
i <- i+1
}
return(x)
}
wfibonacci(2)
wfibonacci(1)
wfibonacci(3)
wfibonacci(4)
wfibonacci(5)
while_fibonacci <- function(n) {
x <- c(0,1)
if (n == 0) {
return(print("Error"))
}
if (n == 1)
return(x[1])
else
while (i<=n) {
x[i] <- x[i-1] + x[i-2]
}
return(x)
}
while_fibonacci(1)
while_fibonacci(2)
while_fibonacci(3)
install.packages("pacman")
library(pacman)
pacman::p_load(readr)
install.packages("pacman")
install.packages("pacman")
rm(current_path)
current_path = getActiveDocumentContext()$path
setwd(dirname(current_path))
setwd("..")
rm(current_path)
install.packages("pacman")
install.packages("pacman")
pacman::p_load(readr)
current_path = getActiveDocumentContext()$path
setwd(dirname(current_path))
install.packages("pacman")
install.packages("pacman")
pacman::p_load(readr)
pacman::p_load(readr,rstudioapi)
current_path = getActiveDocumentContext()$path
setwd(dirname(current_path))
setwd("..")
rm(current_path)
